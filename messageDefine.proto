syntax="proto3"; //pb版本号
package raftlib;  //pb包名
option go_package = "./pb"; // 如果编译出现找不到go_package问题，建议添加声明

service RpcService{
    rpc RequestVote(requestVoteRequest) returns (requestVoteResponse);
    rpc AppendEntry(appendEntryRequest) returns (appendEntryResponse);
    rpc ExecCommand(execCommandRequest) returns (execCommandResponse);
}

// 选举请求RPC
message requestVoteRequest {
    optional uint32 Ver = 1;
    uint64 Term = 2;
    string CandidateId = 3;
    uint32 LastLogIdx = 4;
    uint64 LastLogTerm = 5;
}

// 选举请求回复RPC
message requestVoteResponse {
    optional uint32 Ver = 1;
    string VoterID = 2;
    uint64 Term = 3;
    // 安全补丁，保证leader日志时最新的
    // candidate 收到比他日志还新的回复就会将自己转换为follower
    uint32 LastLogIdx = 4;
    uint64 LastLogTerm = 5;
    bool VoteGranted = 6;
}

// appendEntryRequest 参数意义参考Raft论文
message appendEntryRequest {
    optional uint32 Ver = 1;
    uint64 LeaderTerm = 2;
    string LeaderID = 3;
    uint32 PrevLogIndex = 4;
    uint64 PrevLogTerm = 5;
    uint32 LogType = 6;
    optional bytes Entry = 7;
    uint32 LeaderCommit = 8;
}

// appendEntryResponse 参数意义参考Raft论文
message appendEntryResponse {
    optional uint32 Ver = 1;
    uint64 Term = 2;
    bool Success = 3;
}

// 客户端向Raft集群发送执行命令请求，请求报文
message execCommandRequest {
    optional uint32 Ver = 1;
    uint32 LogType = 2;
    bytes Command = 3;
}

// 客户端向Raft集群发送执行命令请求，响应报文
message execCommandResponse {
    optional uint32 Ver = 1;
    string LeaderID = 2;
    string LeaderAddress = 3;
    string LeaderPort = 4;
    bool Success = 5;
    bytes Data = 6;
}